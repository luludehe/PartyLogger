// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Student {
  id         Int     @id @default(autoincrement())
  last_name  String
  first_name String
  studentId  Int     @unique
  speciality String  @unique
  isMember   Boolean // Indique si l'étudiant est adhérent

  ticket Ticket?
  guests Guest[]
  Log    Log[]
}

model Guest {
  id          Int      @id @default(autoincrement())
  last_name   String
  first_name  String
  guarantor   Student? @relation(fields: [guarantorId], references: [id])
  guarantorId Int?

  ticket Ticket?
  Log    Log[]
}

model Ticket {
  id        Int       @id @default(autoincrement())
  student   Student?  @relation(fields: [studentId], references: [id])
  studentId Int?      @unique
  guest     Guest?    @relation(fields: [guestId], references: [id])
  guestId   Int?      @unique
  createdAt DateTime  @default(now())
  entryAt   DateTime? @default(now())
  exitAt    DateTime? @default(now())
}

model Log {
  id        Int      @id @default(autoincrement())
  student   Student? @relation(fields: [studentId], references: [id])
  studentId Int?
  guest     Guest?   @relation(fields: [guestId], references: [id])
  guestId   Int?
  action    String
  timestamp DateTime @default(now())
}
